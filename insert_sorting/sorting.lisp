(defun insert-sort (arr)
  (let ((cursor 1)
	(back-cursor nil)
	(new-arr (make-array (length arr) :initial-contents arr))
	(arr-length (length arr)))
    (loop while (< cursor arr-length)
       do
	 (setq back-cursor (- cursor 1))
	 (if (or (= back-cursor 0)
		 (> back-cursor 0))
	     (progn
	       (let ((sorted (aref new-arr back-cursor))
		     (unsorted (aref new-arr cursor)))
		 (loop while (and (> sorted unsorted)
				  (or (> back-cursor 0)
				      (= back-cursor 0)))
		    do
		      (setf (aref new-arr (+ back-cursor 1)) sorted)
		      (setq back-cursor (- back-cursor 1))
		      (if (< back-cursor 0)
			  (return)
			  (setq sorted (aref new-arr back-cursor))))
		 (setf (aref new-arr (+ back-cursor 1)) unsorted))))
	 (setq cursor (+ cursor 1))) new-arr))
